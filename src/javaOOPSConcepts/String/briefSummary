Immutability: Strings cannot be changed once created.

String Pool: Optimizes memory usage by reusing existing strings.

Concatenation: Combine strings using + or concat().

Length: Get the number of characters using length().

Substring: Extract parts of a string using substring().

Comparison: Compare strings using equals(), equalsIgnoreCase(), and compareTo().

Searching: Find characters or substrings using indexOf() and lastIndexOf() and startsWith() ,endsWith() ,contains().

Case Conversion: Convert case using toUpperCase() and toLowerCase().

Trimming: Remove whitespace using trim().

Splitting: Split strings into arrays using split().



Remembering string functions in Java can be easier if you use mnemonic techniques, group functions by categories, and practice often. Here are some effective memory techniques:

1. Group Similar Functions

    Conversion: Functions that convert strings:
    toLowerCase(), toUpperCase(), valueOf().

    Search: Functions to find substrings:
    indexOf(), lastIndexOf(), contains(), startsWith(), endsWith().

    Manipulation: Functions to modify strings:
    replace(), replaceAll(), substring(), trim().

    Comparison: Functions to compare strings:
    equals(), equalsIgnoreCase(), compareTo().

    Split and Join:
    split(), join().