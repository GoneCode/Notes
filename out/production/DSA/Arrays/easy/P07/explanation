Sure! Let's break down the problem of finding the pivot index in an array.

### Problem Statement
Given an array of integers `nums`,
the pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the right of the index.
If no such index exists, return `-1`. If there are multiple pivot indexes, return the leftmost one.

### Example
- **Input**: `nums = [1, 7, 3, 6, 5, 6]`
- **Output**: `3`
- **Explanation**: The pivot index is 3. The sum of the numbers to the left of index 3 is `1 + 7 + 3 = 11`, and the sum of the numbers to the right of index 3 is `5 + 6 = 11`.

### Steps to Solve
1. **Calculate Total Sum**: First, calculate the total sum of the array.
2. **Iterate Through the Array**: Use a variable to keep track of the sum of elements to the left of the current index.
3. **Check Pivot Condition**: For each index, check if the left sum is equal to the total sum minus the left sum minus the current element. If it is, return the current index.
4. **Update Left Sum**: Update the left sum by adding the current element.
5. **Return -1 if No Pivot**: If no pivot index is found, return `-1`.

### Code Example in Java
Here's a simple implementation in Java:
```java
public class Solution {
    public int pivotIndex(int[] nums) {
        int totalSum = 0;
        for (int num : nums) {
            totalSum += num;
        }
        int leftSum = 0;
        for (int i = 0; i < nums.length; i++) {
            if (leftSum == totalSum - leftSum - nums[i]) {
                return i;
            }
            leftSum += nums[i];
        }
        return -1;
    }
}
```

### Explanation of the Code
- **Calculate Total Sum**: The first loop calculates the total sum of the array.
- **Iterate Through the Array**: The second loop iterates through the array to find the pivot index.
- **Check Pivot Condition**: For each index, it checks if the left sum is equal to the total sum minus the left sum minus the current element.
- **Update Left Sum**: If the condition is not met, it updates the left sum by adding the current element.
- **Return -1 if No Pivot**: If no pivot index is found after the loop, it returns `-1`.

This approach ensures that you find the pivot index efficiently. You can find more details and examples [here](https://leetcode.com/problems/find-pivot-index/description/). Happy coding!